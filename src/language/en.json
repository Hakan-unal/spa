{
    "title1": "What Is a Single-Page Application (SPA) ?",
    "title2": "Why Single Page Application ?",
    "title3": "Advantages",
    "title4": "Disadvantages",
    "paragraph1": "A single page application application is a structure that reshapes the application according to dynamically changing data from the web server, rather than an application that reloads all pages. It can do this because it can do the routing process on the client-side, not the backend. With the new generation frameworks and component structures, the effect of switching to a new page is created. Before SPA, this was when the user entered the web application and made a request for the static page, and the server was returning the page to the client side, but the problem was that the server was sending the whole page for every request, which gave a slower internet experience. Although AJAX, which emerged in the future, relieved this situation to some extent, the routing process is still uploaded to the server.",
    "paragraph2": "With SPA, the load on the server was further lightened and more load was placed on the client side. Developing browsers, the internet and the computer have made us feel less of this burden. Instead of performing the routing process on a single server for all users, each user's own browser provided us with a faster internet experience. One of the reasons behind the emergence of many new frameworks is actually that they offer the promise of faster web browsing. If you are one of those who can catch up with the release speed of frameworks, let's take a brief look at this issue, which has increased its popularity in recent years and has disadvantages as well as advantages adopted by many JavaScript frameworks.",
    "paragraph3": "In SPA applications, the whole page is not refreshed, this shows us the speed difference. The application source files come from the server at the time of the first load and are the data we see changed, so the application is very fast in page transitions after the first load.",
    "paragraph4": "Even if your internet is slow or your internet connection is disconnected after the first installation moment, you can continue to stay in the application. An important and effective feature in terms of cache management and user experience.",
    "paragraph5": "For software developers, this fragmented component structure allows modular development. Even if there is an error in a certain part of the application, you will encounter a process that does not affect the entire application, or you can separate the processes and manage the development process more easily while developing.",
    "paragraph6": "Bug solutions have become more comfortable with the tools that have emerged with the new frameworks. By using these tools, you can increase your speed in the software development process. Many modern frameworks (React, VueJS, AngularJS) have tools in browsers.",
    "paragraph7": "It falls short on SEO, because the search engine sees the app as a single page and doesn't detect the dynamic change. In the developing process, there are frameworks that try to bring solutions to this problem and aim to develop it, NextJS is one of them. Apart from this, improvements are being made on the Google side in order to overcome the problem.",
    "paragraph8": "If you are not careful during the development process and there are overlooked points, this will cause a lot of unused unnecessary data to crawl through the pages. It is an important issue to clean them correctly in state management and module transitions.",
    "paragraph9": "It is inevitable that you will go to the previous web page or get an error in the routing processes. That's why there are packages that you can manage browser history in global package managers (npm, yarn) for SPA applications."
}